name: CI

# Controls when the workflow will run
on:
  workflow_call:
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # This workflow contains a single job called "build"
  start:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a single command using the runners shell
      - name: start
        run: echo job started at $(date)

  lint:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: start

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:


      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Run lint
          echo running lint!

  nag:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: start

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a nag
        run: echo Running nag!



  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: [lint,nag]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!


      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        env:
          NEEDS: ${{ toJSON(needs) }}      
        run: |
          echo Add other actions to build,
          ls -lta
          echo test, and deploy your project.
          echo "$NEEDS"

  notify-success:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    if: ${{ always() && needs.build.result == 'success' }}
    needs: build

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a set of commands using the runners shell
      - name: Run Success script
        env:
          NEEDS: ${{ toJSON(needs) }}
        run: |
          echo Notify Success
          echo "$NEEDS"
          

  notify-failure:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    if: ${{ always() && needs.build.result ==  'failure' }}
    needs: build

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        env:
          NEEDS: ${{ toJSON(needs) }}
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          echo "$NEEDS"

      
